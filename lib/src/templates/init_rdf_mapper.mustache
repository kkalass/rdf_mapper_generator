// GENERATED CODE - DO NOT MODIFY BY HAND
//
// This file was generated by the RDF Mapper Generator.
//
// ignore_for_file: unused_import, unnecessary_cast, prefer_const_constructors
// ignore_for_file: unnecessary_brace_in_string_interps, prefer_conditional_assignment
// ignore_for_file: lines_longer_than_80_chars, avoid_redundant_argument_values
// ignore_for_file: unused_field

import 'package:rdf_mapper/rdf_mapper.dart';

{{#hasAliasedImports}}
{{#aliasedImports}}
import '{{uri}}'{{#hasAlias}} as {{alias}}{{/hasAlias}};
{{/aliasedImports}}
{{/hasAliasedImports}}

/// Initializes and returns an RdfMapper with {{#isTest}}test {{/isTest}}mappers registered.
/// 
/// [rdfMapper] An optional RdfMapper instance to use. If not provided, a new one will be created.
{{#hasInitFunctionParameters}}
{{#initFunctionParameters}}
/// * [{{name}}] 
{{/initFunctionParameters}}
{{/hasInitFunctionParameters}}
RdfMapper init{{#isTest}}Test{{/isTest}}RdfMapper({
  RdfMapper? rdfMapper,
  {{#hasInitFunctionParameters}}
  {{#initFunctionParameters}}
  required {{type}} {{name}},
  {{/initFunctionParameters}}
  {{/hasInitFunctionParameters}}
}) {
  if (rdfMapper == null) {
    rdfMapper = RdfMapper.withDefaultRegistry();
  }
  var registry = rdfMapper.registry;

  {{#mappers}}
  registry.registerMapper<{{type}}>({{code}});
  {{/mappers}}
  
  return rdfMapper;
}
