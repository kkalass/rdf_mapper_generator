// GENERATED CODE - DO NOT MODIFY BY HAND
//
// This file was generated by the RDF Mapper Generator.
// Generated on: 2025-06-06T10:12:17.797592

import 'package:rdf_mapper/rdf_mapper.dart';

// Import model files
import 'fixtures/annotation_test_models.dart' as mo_0;
import 'fixtures/global_resource_processor_test_models.dart' as mo_1;

// Import mapper files
import 'fixtures/annotation_test_models.rdf_mapper.g.dart' as ma_0;
import 'fixtures/global_resource_processor_test_models.rdf_mapper.g.dart' as ma_1;

/// Initializes and returns an RdfMapper with test mappers registered.
/// 
/// [rdfMapper] An optional RdfMapper instance to use. If not provided, a new one will be created.
/// Provider parameters:
/// * [baseUriProvider] {+baseUri}
RdfMapper initTestRdfMapper({
  RdfMapper? rdfMapper,
  // Provider parameters
  required String Function() baseUriProvider,
}) {
  if (rdfMapper == null) {
    rdfMapper = RdfMapper.withDefaultRegistry();
  }
  var registry = rdfMapper.registry;

  registry.registerMapper<mo_0.BookWithMapper>(
    ma_0.BookWithMapperMapper(
    )
  );
  registry.registerMapper<mo_0.BookWithTemplate>(
    ma_0.BookWithTemplateMapper(
    )
  );
  registry.registerMapper<mo_1.Book>(
    ma_1.BookMapper(
    )
  );
  registry.registerMapper<mo_1.ClassWithEmptyIriStrategy>(
    ma_1.ClassWithEmptyIriStrategyMapper(
    )
  );
  registry.registerMapper<mo_1.ClassWithIriTemplateStrategy>(
    ma_1.ClassWithIriTemplateStrategyMapper(
    )
  );
  registry.registerMapper<mo_1.ClassWithIriTemplateAndContextVariableStrategy>(
    ma_1.ClassWithIriTemplateAndContextVariableStrategyMapper(
      baseUriProvider: baseUriProvider,
    )
  );
  registry.registerMapper<mo_1.ClassWithIriNamedMapperStrategy>(
    ma_1.ClassWithIriNamedMapperStrategyMapper(
    )
  );
  registry.registerMapper<mo_1.ClassWithIriMapperStrategy>(
    ma_1.ClassWithIriMapperStrategyMapper(
    )
  );
  registry.registerMapper<mo_1.ClassWithIriMapperInstanceStrategy>(
    ma_1.ClassWithIriMapperInstanceStrategyMapper(
    )
  );
  
  return rdfMapper;
}
